@page "/accounts"
@using FinancialApp.Data
@using Newtonsoft.Json
@inject HttpClient Http


<h3>Accounts</h3>

@if (accounts == null)
{
     <div class="spinner-border text-danger" role="status">
        <span class="visually-hidden"></span>
    </div>
}
else
{
    <table class="table">
        <thead>
            <tr>
                <th>Account</th>
                <th>Name</th>
                <th>Balance</th>
                <th>Soft Account</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var account in accounts.AccountSummaries)
            {
                @if(@account.SoftAccount == true) {
                <tr>
                    <td>@account.RecordId</td>
                    <td>@account.AccountName</td>
                    <td>@account.Balance</td>
                    <td>@account.SoftAccount</td>
                </tr>
                }
            }
        </tbody>
    </table>
    <table class="table">
        <thead>
            <tr>
                <th>Account</th>
                <th>Name</th>
                <th>Balance</th>
                <th>Soft Account</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var account in accounts.AccountSummaries)
            {
                @if(@account.SoftAccount == false) {
                <tr>
                    <td>@account.RecordId</td>
                    <td>@account.AccountName</td>
                    <td>@account.Balance</td>
                    <td>@account.SoftAccount</td>
                </tr>
                }
            }
        </tbody>
    </table>

}

@code {
private AccountListing accounts;

    protected override async Task OnInitializedAsync()
    {
        HttpResponseMessage response = await Http.GetAsync("http://localhost:7071/api/accounts");
        string responseBody = await response.Content.ReadAsStringAsync();
        accounts = JsonConvert.DeserializeObject<AccountListing>(responseBody);
    }
}
